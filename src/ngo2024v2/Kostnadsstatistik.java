/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024v2;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author jerry
 */
public class Kostnadsstatistik extends javax.swing.JFrame {

    private InfDB idb;
    private String InloggadHandLaggare;
    private ArrayList<HashMap<String, String>> listaProjekt;
    private JList<String> projektLista;
    /**
     * Creates new form Kostnadsstatistik
     * @param idb
     * @param InloggadHandlaggare
     */
    public Kostnadsstatistik(InfDB idb, String InloggadHandlaggare) {
        this.idb = idb;
        this.InloggadHandLaggare = InloggadHandlaggare;
        initComponents();
        fyllKostnadsLista();
    }

    private Kostnadsstatistik() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void fyllKostnadsLista(){
try {
            // Hämta projekten där den inloggade användaren är projektchef
            String sqlFragaProjekt = "SELECT projektnamn, startdatum, slutdatum, kostnad FROM projekt join anstalld on aid = projektchef WHERE epost = '" + InloggadHandLaggare + "'";
            listaProjekt = idb.fetchRows(sqlFragaProjekt);

            // Skapa en modell för listan
            DefaultListModel<String> model = new DefaultListModel<>();

            // Loopa igenom resultaten och lägg till dem i listmodellen
            if (listaProjekt != null) {
            for (HashMap<String, String> rad : listaProjekt) {
                // Skapa en sträng med HTML-formatering för varje projekt
                String htmlFormattedItem = "<html><font color='gray'><b>Projekt Namn:</b></font> " + rad.get("projektnamn") + "<br>"
                                          + "<font color='gray'><b>Startdatum:</b></font> " + rad.get("startdatum") + "<br>"
                                          + "<font color='gray'><b>Slutdatum:</b></font> " + rad.get("slutdatum") + "<br>"
                                          + "<font color='gray'><b>Kostnad:</b></font> " + rad.get("kostnad") + "<html>";
                model.addElement(htmlFormattedItem);
            }
            } else {
                model.addElement("Inga projekt hittades.");
            }

            // Skapa en JList med modellen
            projektLista = new JList<>(model);

            // Lägg till JList till en JScrollPane för att göra det möjligt att rulla
            JScrollPane scrollPane = new JScrollPane(projektLista);
            scrollPane.setBounds(20, 40, 500, 300); // Ange position och storlek för JScrollPane

            // Lägg till JScrollPane till JFrame
            getContentPane().add(scrollPane);

        } catch (InfException ex) {
            System.out.println(ex.getMessage());
        }

        // Sätt JFrame till synlig efter att alla komponenter har lagts till
        this.setVisible(true);
    }
    private void gaTillProjektChefMeny() {
        this.dispose();
        ProjektChefMeny ProjektChefMeny = new ProjektChefMeny(idb, InloggadHandLaggare);
        ProjektChefMeny.setVisible(false);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTillbaka = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka)
                .addContainerGap(322, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka)
                .addContainerGap(271, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        // TODO add your handling code here:
        gaTillProjektChefMeny();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kostnadsstatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kostnadsstatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kostnadsstatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kostnadsstatistik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kostnadsstatistik().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTillbaka;
    // End of variables declaration//GEN-END:variables
}
